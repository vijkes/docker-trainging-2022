 docker run -it --name c5 -v /data:/var/www/html/persist  centos:7


29  docker rm -f $(docker ps -aq)
   30  docker ps -a
   31 docker run -itd --name web httpd
   32 docker inspect <ip>
   32  ll -a
   33  mkdir /code
   34  cd /code
   34  docker run -it --name webpage -p 1234:80 -v /code:/var/www/html centos:7
   35  pwd
   36  cat index.html
   37  ll
   38  cat > index.html
  
   45  docker run -it --name dbclient centos:7
  
   50  docker inspect newdb
   51  ping 172.17.0.3
   52  docker ps
   53  docker attach dbclient

   60  docker exec -it newdb bash
   61  date
   62  cal
   63  cal \ 2 2022
   64  cal 2 2022
   70  docker run -dit --name datab -e MYSQL_ROOT_PASSWORD=yellow -e MYSQL_USER=vk -e MYSQL_PASSWORD=yellow -e MYSQL_DATABASE=vkstudent mysql
   73  docker exec -it datab bash

-----------------day3-------------------------------------------------

   85  docker pull wordpress
  103  docker run -idt --name db -e MYSQL_ROOT_PASSWORD=redhat -e MYSQL_DATABASE=mydb -e MYSQL_USER=vk -e MYSQL_PASSWORD=redhat mysql
  104  docker run -idt --name mywps -p 8080:80 wordpress:latest
  122  docker run -itd --name db -e MYSQL_ROOT_PASSWORD=redhat -e MYSQL_DATABASE=mydb -e MYSQL_USER=vk -e MYSQL_PASSWORD=redhat -v /newdata:/var/lib/mysql mysql
  169  docker run -idt --name os1 centos:7
  170  docker run -idt --name os2 --link os1 centos:7
  171  docker attach os1
  172  docker attach os2

----------------day5-------------------------------------------------

Network packet from the operating system goes to the router and it
changes the source IP to the routerâ€™s public IP this changing of IP
address is called nating or masquerade


A software define network (SDN) is a tool or technology through
which we can create a switch or router which works as a real
physical hardware device

Docker has created the entire network infrastructure with the help
of software-defined networking

As soon as we launch the container internally docker provides one
network card to it 

IPAM is a concept that is used for IP address management that
helps in network assigning addresses which means any container
docker launch it will be assigned with the IP address


----------------day6-------------------------------------------------
 213  docker network create --driver bridge --subnet 10.0.1.0/24 dbnet
 237  docker run -dit --name c4 --network dbnet centos:7
 272  docker run -dit --name mywps --network dbnet -p 1234:80 wordpress
 282  docker run -dit --name mydb --network dbnet -e MYSQL_ROOT_PASSWORD=redhat \
 -e MYSQL_DATABASE=db -e MYSQL_USER=vk \
 -e MYSQL_PASSWORD=redhat -v /newdat:/var/lib/mysql mysql
 
 
 ------------------------day7------------docker-compose----------------------------------
    327  docker-compose
  328   curl -SL https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose

  330   docker compose version
  331  chmod +x /usr/local/bin/docker-compose

  333  docker-compose version
  334  mkdir /dockercode
  335  cd /dockercode
  336  vim mycode.yaml
  337  docker rm -f $(docker ps -qa)

  346  docker-compose version
  347  docker --help
  352  docker-compose -f mycode.yaml up

  359  docker-compose ps
  360  docker-compose -f mycode.yaml ps

  379  mv d1.tsxt docker-compose.yaml
  380  docker-compose ps
  381  docker-compose -f up
  382  docker-compose -f docker-compose.yaml up


  385  vim docker-compose.yaml
  386  docker-compose -f docker-compose.yaml up

  392  docker-compose up -d
  402  docker-compose up
  403  ping 8.8.8.8

  407  docker-compose up -f
  434  docker-compose logs c1

  436  docker-compose -h
  456  docker-compose exec c1 date
  463  docker-compose stop
  465  docker-compose rm
  470  docker network ls

 ------------------------day8------------docker-compose----------------------------------
 
   27  docker network ls
   28  docker network create vknet --driver bridge
   41  mkdir /data
   42  docker run -dit --name mydb1 --network vknet -e MYSQL_ROOT_PASSWORD=redhat -e MYSQL_DATABASE=myblog -e MYSQL_USER=vkuser -e MYSQL_PASSWORD=redhat -v /data:/var/lib/mysql mysql:latest

  
   47  docker network rm vknet
   52  docker-compose up  
   66  docker-compose up -d
   71  docker network inspect mycode_lwnet
   80  docker-compose up -d
   87  curl ifconfig.io
  
  139  docker-compose logs db
  140  docker-compose logs wp
  
  170  no ps
  174  docker-compose stop
  176  docker-compose down
 
 
 docker compose has given facility of depends on, not docker
docker-compose stop  means stop
docker-compose down means shutdown and delete

docker-compose is a tool that runs over docer engine
and it is used in automation of docker platform and setup

 ------------------------day9------------dockerfile----------------------------------
 
 FROM centos:7

RUN yum install httpd -y
RUN httpd
RUN echo "Welcome to my webpage" >> /var/www/index.html


workspace in dockerfile is known as root folder

and one of the RUN command should come in last

Dockerfile:
Buildtime: process of Build ----> own  Image from code
run command at build time     RUN

RunTime: process of Image ---> Container
run command at run time  ---->   CMD / Entrypoint

auto exit means os failed to start

RUN httpd    we can't copy data from RAM, and there is no use of this command
CMD httpd    this works on run time


docker build -t myos:v3 /code
docker run -dit  --name os4 myos:v3
docker history decode:v1
 docker run -it decode:v1 cal
docker run -it decode:v1 bash
 docker save --help
 docker save decode:v3 -o myweb.tar
docker load -i myweb.tar

====================================================================================================================================

in CMD we can overwrite command in docker run
but in ENTRYPOINT we can't overwrite

in CMD we can't chage argument
in ENTRYPOINT we can dynamacilly change argumetn


  705  docker run -it --name newos3 centos:7 cp my.py newos1:/tmp
  721  docker build -t py:v1 .
  760  docker run -it py:v1 /mypycode/hello.py
  770  docker run -it py:v1 cal
 783  docker run -it py:v1 2022
  784  docker run -it py:v1 13 2022
  807  docker run -it py:v1 /mypycode/hello.py
  838  docker info | grep index
  839  docker pull vijkes/javaweb:jenkins-endtoendpipelinejob-192




